
% ------------------------------------- %
% Generate Cloud Simulations            % 
% Version 2.0                           %
%                                       %
% For scientific use only               %
% Copyright: Stephan Schlüter           %
% Last update: 31.01.2021               %
% ------------------------------------- %

function sims = simClouds(location,beginDate,endDate,nSims)


% lastCc = die letzte bekannt cloud coverage
% location entscheidet über die Cloud Cover Matrix, Bisher haben wir Busan,
% Oulu und Ulm

% location - choice betwen 'UL', 'BU', 'OU';

Ulm = [0.6893	0.0795	0.047	0.0341	0.0278	0.0258	0.0245	0.0426	0.0294;
0.3102	0.1298	0.0995	0.079	0.0829	0.0751	0.0498	0.0927	0.081;
0.1811	0.1119	0.1231	0.1099	0.0895	0.1027	0.0753	0.115	0.0916;
0.124	0.0766	0.0966	0.0966	0.1231	0.1158	0.0939	0.1613	0.1121;
0.0862	0.0681	0.078	0.1092	0.1256	0.1363	0.1264	0.1568	0.1133;
0.0638	0.0477	0.0718	0.0909	0.1122	0.1246	0.121	0.2009	0.1672;
0.0436	0.0337	0.062	0.0766	0.0964	0.1003	0.1314	0.2667	0.1894;
0.0199	0.0182	0.016	0.0273	0.0308	0.0414	0.0634	0.3227	0.4603;
0.0058	0.0046	0.0047	0.0065	0.008	0.0106	0.0138	0.1444	0.8016];

% Normieren!
for k = 1:size(Ulm,1)
   Ulm(k,:)  = Ulm(k,:)./sum(Ulm(k,:));
end


Busan = [0.8447	0.0437	0.0247	0.0231	0.0182	0.0125	0.0124	0.0089	0.004	0.0042	0.0038;
0.3719	0.2086	0.1078	0.0828	0.0656	0.043	0.043	0.0391	0.0195	0.0109	0.0078;
0.2259	0.1344	0.2094	0.1311	0.0907	0.0569	0.0519	0.047	0.033	0.014	0.0058;
0.1756	0.0889	0.1226	0.167	0.114	0.0953	0.0846	0.0774	0.043	0.0194	0.0122;
0.1147	0.0385	0.0822	0.1362	0.1547	0.1214	0.1406	0.1162	0.054	0.0274	0.0141;
0.0775	0.0378	0.0479	0.0829	0.1119	0.1652	0.1706	0.1537	0.0897	0.0411	0.0216;
0.0685	0.0337	0.0372	0.06	0.0774	0.1116	0.1865	0.2113	0.13	0.0541	0.0298;
0.0355	0.0142	0.0243	0.0381	0.0493	0.0792	0.1423	0.254	0.2353	0.0889	0.0388;
0.0187	0.0061	0.0106	0.0255	0.0277	0.0454	0.078	0.1669	0.3466	0.1927	0.0818;
0.0115	0.0051	0.0072	0.0094	0.0115	0.0202	0.0404	0.0739	0.1538	0.4308	0.2362;
0.0069	0.002	0.0014	0.0019	0.0027	0.0057	0.0104	0.0163	0.0361	0.1059	0.8108];


Oulu = [0.8184	0.0494	0.024	0.0182	0.0186	0.0167	0.0151	0.0369	0.0028;
0.4	0.1426	0.0821	0.0492	0.0503	0.0533	0.0492	0.1528	0.0205;
0.2882	0.1319	0.0625	0.0712	0.0694	0.0556	0.0608	0.2292	0.0313;
0.2815	0.1111	0.0593	0.0796	0.0741	0.0556	0.0722	0.2167	0.05;
0.2108	0.0776	0.0675	0.0472	0.0826	0.0573	0.0556	0.3406	0.0607;
0.177	0.0868	0.0484	0.0634	0.0735	0.0801	0.0684	0.3539	0.0484;
0.1122	0.0525	0.0598	0.0466	0.0612	0.086	0.0773	0.4286	0.0758;
0.0392	0.0266	0.0185	0.0229	0.0239	0.0275	0.042	0.5737	0.2257;
0.0039	0.0027	0.002	0.0026	0.0036	0.0041	0.0047	0.1938	0.7827];


t1 = datetime(year(beginDate),month(beginDate),day(beginDate),hour(beginDate),0,0);
t2 = datetime(year(endDate),month(endDate),day(endDate),hour(endDate),0,0);

indexVec = (datenum(t1:hours(1):t2))';
sims = zeros(length(indexVec),nSims);

if (location == 'UL')
    tm = Ulm;
    % Don't know the cloud coverage at beginDate -> pick a random one
    anfang =  randi([0 8],1,nSims);
    sims(1,:)  = anfang;
    for k = 2:size(sims,1)
        for j = 1:size(sims,2)
            p = tm((sims(k-1,j)+1),:);
            R   = mnrnd(1,p);
            sims(k,j) = (0:8)*R';
        end
    end
    
elseif (location == 'BU')
    tm = Busan;
    anfang =  randi([0 10],1,nSims);
    sims(1,1:end)  = anfang;
    for k = 2:size(sims,1)
        for j = 1:size(sims,2)
            R   = mnrnd(1,tm((sims(k-1,j)+1)',:));
            sims(k,j) = (0:10)*R';
        end
    end
elseif (location == 'OU')
    tm = Oulu;
    anfang =  randi([0 8],1,nSims);
    sims(1,2:end)  = anfang;
    for k = 2:size(sims,1)
        for j = 1:size(sims,2)
            R   = mnrnd(1,tm(:,(sims(k-1,j)+1))');
            sims(k,j) = (0:8)*R';
        end
    end
end




